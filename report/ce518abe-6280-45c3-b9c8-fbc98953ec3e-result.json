{"name": "test_app_login[13812345678-246810]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <scripts.test05_app_login.TestAppLogin object at 0x0000021024CA5940>, phone_number = '13812345678', code = '246810'\n\n    @pytest.mark.parametrize(\"phone_number, code\", read_yaml(\"app_login.yaml\"))\n    def test_app_login(self, phone_number, code):\n>       self.app_login.page_app_login(phone_number, code)\n\nscripts\\test05_app_login.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\page_app_login.py:20: in page_app_login\n    self.page_input_phone_number(phone_number)\npage\\page_app_login.py:6: in page_input_phone_number\n    self.base_input(page.app_phone_number, phone_number)\nbase\\base.py:22: in base_input\n    el = self.base_find(loc)\nbase\\base.py:17: in base_find\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency= poll_frequency).until(lambda x: x.find_element(*loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f6ff532b-a178-4559-acfa-381adcedfae9\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x000002102484C280>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "da41f74e-f14a-4e60-82f4-b232cb25d5c3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "phone_number", "value": "'13812345678'"}, {"name": "code", "value": "'246810'"}], "start": 1617081438695, "stop": 1617081468749, "uuid": "a78fbad3-5197-47fc-9346-e345595b60da", "historyId": "dff910e59219f10fae5fdc78ef383a70", "testCaseId": "ec2933d9e11d0cbb035e36410d90b36e", "fullName": "scripts.test05_app_login.TestAppLogin#test_app_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test05_app_login"}, {"name": "subSuite", "value": "TestAppLogin"}, {"name": "host", "value": "fanxx"}, {"name": "thread", "value": "8796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test05_app_login"}]}